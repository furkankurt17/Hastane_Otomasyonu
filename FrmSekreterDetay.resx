<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnOluştur.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAABJRJREFUWEftmG9ME2ccx5+7Xmnp0fIvuL5adAGambiALYuYsBAJOEwkMSbDZG4G
        XxkjC6FBoQVa2kKFdamWwXSwkA1lrixbRoxgyyIRkWbpgjFNxQ5oOqiocw6qMAast+fq01rgmGaMu73Y
        N/nmefF8f71Pnnv+XcH/eklRFCX0/ubNtHvtb7vvu7P9fr8IdXErq8sqzT6XfYGoJkaSdEkTKfUp95L1
        yT6emner925vNYpxI/+MPx9TYU9xFf4nUAFqhatAzjXvNSGKsqvSK6Up2u+1NYSaWFwDBo2pMUqsFbsH
        PYNOVMKe6LmV/1l+s6BG8AcTHPQkfN1Ksop8BZWwqyPdR/IEtYIZBrCQpQ3SOYfPcXNhYUGGStgVfH3z
        TGBhH/vm2IjrgSsOrmoclbCjUz2nXoVz7gkTFG1hrZC64buRA8EwVMKeAoFAirxFbsfVDKsVwVX2VVKP
        nj6q4gQwUZ9YyavmLQA1BKIdBQehqThtnPnqnatyq9XKQyXsaUvTljditbFzoBrBrYasAGKgATEozr6K
        vyq+HIILOwpQXCemTIOmm0tLS0Uozq5kZ2VqUANhwl4Jac5ty1WiKPuanpl+U6QTBUBtFBzdQjiihqDa
        f2h3zy3OZaE4++JpeUMhuDBglIs6i6hWRyu9pbC/KKyUlZd6NrWJX8dfjgA+H8UR2HaiKDfa0brjtQRj
        wijQQiBNFCB0jCbG4vA6ylCUG524cuLjCFzYCJCoI3KGvcOvoyj7CgaDJKEnlkKAYT+DVIX2O3gUP0ty
        IHhdT0hrTvOBuig4BEgayMn+sX6nn+LwGp/VltWC6/DlEOBKSCWEVKAYNzp++fg7ktOSX4AeAukQIIIs
        +LzA+Xj+8bsoujHdnr5dsrV568+YAQtIz0h/7fupLxV1rSv63hbXFHcG02HBEFw0IHRRe5HY5XJt7Kzd
        9cWu1NimWDeohz/63IeBEchRZF3ldeblioyixcjooZY0kofH7o29sP6FKusv28lr4P24Ci5iiUli2ndp
        31sovkbpn6QPAQPM0mB0i0YxsTHRPH5/vBzF/rn2Xtw7wQQWdrwpXr6naw/jB0xGW8a3IahoQD1wQ0A5
        XBj/zortuNXRTDaSjHAhG0AAtqUoHtHswqyMMMIrfBgQGTfgyyqbKuCacmWg6MZEX7FlrTKl5EPJ3Bq4
        Vd5/af8DfiN/p7RZqsAasDuRvjCgHp61+k04a+mVqGhXvLfNsu33aCAm4/V4kG+EF4HVfRAQrn4L3JA3
        76wt7CpUZH6aGVzz8Jd3ju2ubXPP2oPdB3PgK2d6+N+abCIp97T7CTyPBeinNk8n7Sc/2H5uewBvwBlh
        1tgAJpU2pfO88zx7Z61l2FJc0lPigXskM1SUD3QfGPDN+BT0XEbl7Oj6+PX0clt5N1wUjGC0kz5Kosp6
        y8xTs1PJ9I6AStmTJ+BJKbhY8J3gtIARMLkxWayxarj7rqUFR4Z/6OtDF9Ja0ubDoMJGIbW7Yzc1+nDU
        CvvjUZRbDUwMvH+052hXhb1iqfDLQvPQ+BB337XriZ5rnoeezP/Mn9zcCoC/AO9L7WXGc7kFAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>